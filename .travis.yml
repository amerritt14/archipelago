matrix:
  include:
    - os: osx
      osx_image: xcode9.0
      language: node_js
      node_js: "10"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
    - os: linux
      services: docker
      language: generic
      env:
        - YARN_COMMAND=build
      apt:
        packages:
          - libx11-dev
          - libxkbfile-dev
    - os: linux
      language: node_js
      node_js: "10"
      env:
        - YARN_COMMAND=lint
      addons:
        apt:
          packages:
            - libx11-dev
            - libxkbfile-dev
    - os: linux
      language: node_js
      node_js: "10"
      env:
        - YARN_COMMAND=test
      addons:
        apt:
          packages:
            - libx11-dev
            - libxkbfile-dev

cache:
  directories:
  - node_modules
  - $HOME/.cache/electron
  - $HOME/.cache/electron-builder

script:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$YARN_COMMAND" == "build" ]; then
      docker run --rm \
        --env-file <(env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_') \
        -v ${PWD}:/project \
        -v ~/.cache/electron:/root/.cache/electron \
        -v ~/.cache/electron-builder:/root/.cache/electron-builder \
        electronuserland/builder:wine \
        /bin/bash -c "apt-get update && apt-get -y install libx11-dev libxkbfile-dev && yarn --link-duplicates --pure-lockfile --ignore-engines && yarn run dist --linux --win"
    elif [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$YARN_COMMAND" == "lint" ]; then
      yarn --link-duplicates --pure-lockfile --ignore-engines && yarn run lint
    elif [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$YARN_COMMAND" == "test" ]; then
      yarn --link-duplicates --pure-lockfile --ignore-engines && yarn run test
    else
      yarn run dist
    fi

before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

branches:
  except:
    - "/^v\\d+\\.\\d+\\.\\d+$/"

notifications:
  email: false
